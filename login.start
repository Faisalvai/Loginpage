#!/usr/bin/bash

PUT(){ echo -en "\033[${1};${2}H";}
HIDCRSR(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}

command -v ruby > /dev/null 2>&1 || { echo -e >&2 "\033[1;91mI require ruby but it's not installed, Now Installing.\e[0m"; pkg install ruby -y; clear; connection="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then clear
echo -e "\033[1;91m                             [\033[1;92m-\033[1;91m] No Internet\033[1;92m connection!"
   exit
fi; }
command -v lolcat > /dev/null 2>&1 || { echo -e >&2 "\033[1;91mI require lolcat but it's not installed, Now Installing.\e[0m"; gem install lolcat; clear; connection="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then clear
echo -e "\033[1;91m                             [\033[1;92m-\033[1;91m] No Internet\033[1;92m connection!"
   exit
fi; }
command -v pv > /dev/null 2>&1 || apt install pv -y &> /dev/null

echo -ne "\033]12;#363636\007"; clear; sleep 0.4; echo -e "\e[0;1m
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
█                                        █
█\e[1;38;2;0;230;118m █   █▀█ █▀▀ █ █▄ █  █▀ █▀▀ ▀█▀ █ █ █▀█\e[0;1m █
█\e[0;1;38;2;41;121;255m █▄▄ █▄█ █▄█ █ █ ▀█  ▄█ ██▄  █  █▄█ █▀▀\e[0;1m █
█              \e[0m(Early Access)\e[1m            █
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
"
echo -e "\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo -e "\e[0;1m┃\e[0;1;30;48;2;0;230;118m [1] Advanced (Login Page)              \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;48;2;41;121;255m [2] Animated (Login Page)              \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;30;48;2;200;255;0m [3] Auto-Bot (Login Page)              \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;30;48;2;0;234;0m [4] Change Colors & Scheme             \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;30;48;2;0;255;255m [5] Customize Header [Addon]           \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;48;2;50;150;255m [6] Update [Login Page]                \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;48;2;200;0;0m [7] Reset to Default                   \e[0;1m┃";NORM
echo -e "\e[0;1m┃\e[0;1;48;2;101;31;255m [8] Backups Previous Login             \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;48;2;101;31;255m [9] Restore Previous Login             \e[0;1m┃"
echo -e "\e[0;1m┃\e[0;1;30;48;2;200;255;255m [!] Choose an option :                 \e[0;1m┃"
echo -e "\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
PUT 19 26
printf "\e[0;1;30;48;2;200;255;255m"
read option

if [[ $option = "01" ]] || [[ $option = "1" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
echo -ne "\033]12;#b4e1fd\007";echo;bash advance-login
cd /data/data/com.termux/files/home/login-page/temp
chmod +x login.enc
mv login.enc /data/data/com.termux/files/usr/etc
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config" ];then cd /data/data/com.termux/files/usr/etc ; mkdir login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/header" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf header /data/data/com.termux/files/usr/etc/login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/colour-scheme" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf colour-scheme /data/data/com.termux/files/usr/etc/login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/boot-menu" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf boot-menu /data/data/com.termux/files/usr/etc/login-config ; fi
if [ -f "/data/data/com.termux/files/usr/etc/motd" ];then rm /data/data/com.termux/files/usr/etc/motd &> /dev/null ; fi
if [ ! -d "/data/data/com.termux/files/home/.oh-my-zsh" ];then cd /data/data/com.termux/files/usr/etc ; rm bash.bashrc
echo 'if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then' > bash.bashrc
echo '        command_not_found_handle() {' >> bash.bashrc
echo '                /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"' >> bash.bashrc
echo '        }' >> bash.bashrc
echo 'fi' >> bash.bashrc
echo >> bash.bashrc
echo "PS1='\$ '" >> bash.bashrc
echo 'bash /data/data/com.termux/files/usr/etc/login.enc' >> bash.bashrc ;fi
if [ -d "/data/data/com.termux/files/home/.oh-my-zsh" ];then cd /data/data/com.termux/files/usr/etc ; rm zshrc
echo '. /data/data/com.termux/files/usr/etc/profile' > zshrc
echo 'command_not_found_handler() {' >> zshrc
echo '        /data/data/com.termux/files/usr/libexec/termux/command-not-found $1' >> zshrc
echo '}' >> zshrc
echo '#set nomatch so *.sh would not error if no file is available' >> zshrc
echo 'setopt +o nomatch' >> zshrc
echo '. /data/data/com.termux/files/usr/etc/profile' >> zshrc
echo "PS1='%# '" >> zshrc
echo 'bash /data/data/com.termux/files/usr/etc/login.enc' >> zshrc ;fi

elif [[ $option = "02" ]] || [[ $option = "2" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
echo -ne "\033]12;#b4e1fd\007";echo;bash animat-login
cd /data/data/com.termux/files/home/login-page/temp
chmod +x login.enc
mv login.enc /data/data/com.termux/files/usr/etc
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config" ];then cd /data/data/com.termux/files/usr/etc ; mkdir login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/header" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf header /data/data/com.termux/files/usr/etc/login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/colour-scheme" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf colour-scheme /data/data/com.termux/files/usr/etc/login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/boot-menu" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf boot-menu /data/data/com.termux/files/usr/etc/login-config ; fi
if [ -f "/data/data/com.termux/files/usr/etc/motd" ];then rm /data/data/com.termux/files/usr/etc/motd &> /dev/null ;fi
if [ ! -d "/data/data/com.termux/files/home/.oh-my-zsh" ];then cd /data/data/com.termux/files/usr/etc ; rm bash.bashrc
echo 'if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then' > bash.bashrc
echo '        command_not_found_handle() {' >> bash.bashrc
echo '                /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"' >> bash.bashrc
echo '        }' >> bash.bashrc
echo 'fi' >> bash.bashrc
echo >> bash.bashrc
echo "PS1='\$ '" >> bash.bashrc
echo 'bash /data/data/com.termux/files/usr/etc/login.enc' >> bash.bashrc ;fi
if [ -d "/data/data/com.termux/files/home/.oh-my-zsh" ];then cd /data/data/com.termux/files/usr/etc ; rm zshrc
echo '. /data/data/com.termux/files/usr/etc/profile' > zshrc
echo 'command_not_found_handler() {' >> zshrc
	echo '        /data/data/com.termux/files/usr/libexec/termux/command-not-found $1' >> zshrc
echo '}' >> zshrc
echo '#set nomatch so *.sh would not error if no file is available' >> zshrc
echo 'setopt +o nomatch' >> zshrc
echo '. /data/data/com.termux/files/usr/etc/profile' >> zshrc
echo "PS1='%# '" >> zshrc
echo 'bash /data/data/com.termux/files/usr/etc/login.enc' >> zshrc ;fi
elif [[	$option = "03" ]] || [[ $option = "3" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
echo -ne "\033]12;#b4e1fd\007";echo;bash autobot-login
cd /data/data/com.termux/files/home/login-page/temp
chmod +x login.enc
mv login.enc /data/data/com.termux/files/usr/etc
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config" ];then cd /data/data/com.termux/files/usr/etc ; mkdir login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/header" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf header /data/data/com.termux/files/usr/etc/login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/colour-scheme" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf colour-scheme /data/data/com.termux/files/usr/etc/login-config ; fi
if [ ! -d "/data/data/com.termux/files/usr/etc/login-config/boot-menu" ];then cd /data/data/com.termux/files/home/login-page ; cp -rf boot-menu /data/data/com.termux/files/usr/etc/login-config ; fi
if [ -f "/data/data/com.termux/files/usr/etc/motd" ];then rm /data/data/com.termux/files/usr/etc/motd &> /dev/null ;fi
if [ ! -d "/data/data/com.termux/files/home/.oh-my-zsh" ];then cd /data/data/com.termux/files/usr/etc ; rm bash.bashrc
echo 'if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then' > bash.bashrc
echo '        command_not_found_handle() {' >> bash.bashrc
echo '                /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"' >> bash.bashrc
echo '        }' >> bash.bashrc
echo 'fi' >> bash.bashrc
echo >> bash.bashrc
echo "PS1='\$ '" >> bash.bashrc
echo 'bash /data/data/com.termux/files/usr/etc/login.enc' >> bash.bashrc ;fi
if [ -d "/data/data/com.termux/files/home/.oh-my-zsh" ];then cd /data/data/com.termux/files/usr/etc ; rm zshrc
echo '. /data/data/com.termux/files/usr/etc/profile' > zshrc
echo 'command_not_found_handler() {' >> zshrc
	echo '        /data/data/com.termux/files/usr/libexec/termux/command-not-found $1' >> zshrc
echo '}' >> zshrc
echo '#set nomatch so *.sh would not error if no file is available' >> zshrc
echo 'setopt +o nomatch' >> zshrc
echo '. /data/data/com.termux/files/usr/etc/profile' >> zshrc
echo "PS1='%# '" >> zshrc
echo 'bash /data/data/com.termux/files/usr/etc/login.enc' >> zshrc ;fi
elif [[ $option = "04" ]] || [[ $option = "4" ]]; then
printf "\e[0m"
clear
cd /data/data/com.termux/files/home/login-page/program-files
bash colour.login
elif [[ $option = "05" ]] || [[ $option = "5" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
echo -ne "\033]12;#b4e1fd\007";echo -e "\e[0m";bash header.login
elif [[ $option = "06" ]] || [[ $option = "6" ]]; then
echo;cd /data/data/com.termux/files/home/login-page/program-files
bash update.login;echo
elif [[ $option = "07" ]] || [[ $option = "7" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
bash reset.login
elif [[ $option = "08" ]] || [[ $option = "8" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
bash backup.login
elif [[ $option = "09" ]] || [[ $option = "9" ]]; then
cd /data/data/com.termux/files/home/login-page/program-files
bash restore.login
elif [[ $option = "exit" ]] || [[ $option = "Exit" ]] || [[ $option = "EXIT" ]] || [[ $option = "kill" ]] || [[ $option = "Kill" ]] || [[ $option = "KILL" ]] || [[ $option = "bye" ]] || [[ $option = "Bye" ]] || [[ $option = "BYE" ]];then echo;echo -e "\e[0;1;30;48;2;200;255;255m  [!] Closing login-page...               \e[0m";echo -e "\033]12;#b4e1fd\007"; exit
else echo;echo -e "\e[0;48;2;200;0;0m Input not found, Make sure you entered following input ! \e[0m";echo ;fi; echo -ne "\033]12;#b4e1fd\007"
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

